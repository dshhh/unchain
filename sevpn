#!/bin/sh /etc/rc.common
START=99
STOP=15
### Server IP
SERVER=
### Name of Account (Default: vpn_0)
ACCOUNT=vpn_0
UPTIME=$(awk '{print $1}' /proc/uptime)
UPTIME=${UPTIME%.*}
function ready() {
	WAIT=79
	if [ $UPTIME -ge $WAIT ]; then
		$1
	else
 		SLEEP=$(($WAIT - $UPTIME))
		sleep $SLEEP
		$1
	fi
}
function fetchip() {
	IP4=$(curl -s ifconfig.co -4)
	if [ $? -ne 0 ]; then
		IP4=$(curl -s checkip.amazonaws.com)
		if [ $? -ne 0 ]; then
			printf '%s\n' "Couldn't fetch IP address. Something went wrong. The router may not be connected to the Internet."
		fi
	fi
	echo $IP4
}
start() {
	LOCK=/var/lock/sevpn.lock
	if [ -f "$LOCK" ]; then
		exit 0
	fi
	touch $LOCK
	function proceed() {
		DNIC=$(/sbin/ip route | awk '/default/ { print $5 }')
		DEFAULT=$(/sbin/ip route | awk '/default/ { print $3; exit }')
		NET=$(/sbin/ip address | awk '/br-lan/ {print $0}' | awk '/inet/ {print $2}' | awk -F. '{print $1 "." $2 "." $3 ".0"; exit}')
# Comment lines from here to disable VPN status LED (1/2)
		LEDVPN=$(/bin/ls /sys/class/leds/ | awk '/:wan/ || /:lan/ { print $0 }')
		echo netdev> /sys/class/leds/$LEDVPN/trigger
		echo vpn_0> /sys/class/leds/$LEDVPN/device_name
		echo '1'> /sys/class/leds/$LEDVPN/tx
		echo '1'> /sys/class/leds/$LEDVPN/rx
# Comment lines until here to disable VPN status LED (1/2)
		echo $DNIC > "/tmp/sevpn-dnic"
		ip r flush table main
		route add -net $NET netmask 255.255.255.0 dev br-lan
		udhcpc -i $DNIC -q
		ip r a $SERVER via $DEFAULT
		udhcpc -i vpn_0 -q
		iptables -A forwarding_rule -o vpn_0 -j ACCEPT
		IPPUB=$(fetchip)
		if [ $IPPUB = $SERVER ]; then
			echo "VPN is connected. Your new IP address is: ${IPPUB}"
			rm $LOCK
			exit 0
		else
			echo "VPN is not connected or traffic not routed. Retrying..."
			rm $LOCK
			/etc/init.d/sevpn restart
		fi
	}
	function connect() {
		vpncmd localhost /CLIENT /CMD AccountConnect $ACCOUNT
		STATUS=$(vpncmd localhost /CLIENT /CMD AccountStatusGet $ACCOUNT | sed -n -e 's/^.*Session Status                            |//p')
		if [ "$STATUS" = "Connection Completed (Session Established)" ]; then
			proceed
		else
			sleep 1
			STATUS=$(vpncmd localhost /CLIENT /CMD AccountStatusGet $ACCOUNT | sed -n -e 's/^.*Session Status                            |//p')
			if [ "$STATUS" = "Connection Completed (Session Established)" ]; then
				proceed
			else
				sleep 7
				STATUS=$(vpncmd localhost /CLIENT /CMD AccountStatusGet $ACCOUNT | sed -n -e 's/^.*Session Status                            |//p')
				if [ "$STATUS" = "Connection Completed (Session Established)" ]; then
					proceed
				else
						vpncmd localhost /CLIENT /CMD AccountDisconnect vpn_0
						echo "$SERVER:443:u2ch412_default-vhub-$ACCOUNT: Path or Host down. Retrying..."
						sleep 2
						connect
				fi
			fi
		fi
	}
	function check() {
		STATUS=$(vpncmd localhost /CLIENT /CMD AccountStatusGet $ACCOUNT | sed -n -e 's/^.*Session Status                            |//p')
		if [ "$STATUS" = "" ]; then
			if [ -f /tmp/sevpn-dnic ]; then
				rm $LOCK
				/etc/init.d/sevpn restart
			fi
				connect
		else
			rm $LOCK
			/etc/init.d/sevpn restart
		fi
	}
	ready check
}
stop() {
	LOCK=/var/lock/sevpn.lock
	if [ -f "$LOCK" ]; then
		exit 0
	fi
	touch $LOCK
	function stop() {
		vpncmd localhost /CLIENT /CMD AccountDisconnect vpn_0
		if [ -f /tmp/sevpn-dnic ]; then
			DNIC=$(cat /tmp/sevpn-dnic)
			NET=$(/sbin/ip address | awk '/br-lan/ {print $0}' | awk '/inet/ {print $2}' | awk -F. '{print $1 "." $2 "." $3 ".0"; exit}')
			rm /tmp/sevpn-dnic
			ip r flush table main
			route add -net $NET netmask 255.255.255.0 dev br-lan
			udhcpc -i $DNIC -q
		fi
# Comment lines from here to disable VPN status LED (2/2)
		LEDVPN=$(/bin/ls /sys/class/leds/ | awk '/:wan/ || /:lan/ { print $0 }')
		echo '0'> /sys/class/leds/$LEDVPN/tx
		echo '0'> /sys/class/leds/$LEDVPN/rx
# Comment lines until here to disable VPN status LED (2/2)
		IPPUB=$(fetchip)
		echo "Your new IP address is: ${IPPUB}"
		rm $LOCK
	}
	ready stop
}
